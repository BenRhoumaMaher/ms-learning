version: '3.8'

services:
  php:
    build:
      context: ./ms-learning-backend
      dockerfile: Dockerfile
    container_name: mslearning-php
    volumes:
      - ./ms-learning-backend:/var/www/html
    depends_on:
      - db
      - elasticsearch
    networks:
      - mslearning

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./ms-learning-backend:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - mslearning

  db:
    image: mysql:8.0
    container_name: mslearning_db
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: ms-learning
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mslearning

  ### React Frontend ###
  react:
    build:
      context: ./ms-learning-frontend
      dockerfile: Dockerfile
    container_name: mslearning_react
    ports:
      - "3000:3000"
    volumes:
      - ./ms-learning-frontend:/app
      - /app/node_modules
    depends_on:
      - php
    networks:
      - mslearning
    environment:
      - WATCHPACK_POLLING=true
  mercure:
    image: dunglas/mercure
    environment:
      - MERCURE_PUBLISHER_JWT_KEY=mercure
      - MERCURE_SUBSCRIBER_JWT_KEY=mercure
      - MERCURE_JWT_SECRET=mercure
      - MERCURE_EXTRA_DIRECTIVES=cors_origins=*,publish_origins=*,jwt_query=true
      - MERCURE_ALLOW_ANONYMOUS=1
      - MERCURE_CORS_ALLOWED_ORIGINS=*
      - MERCURE_PUBLISH_ALLOWED_ORIGINS=*
      - MERCURE_SUBSCRIBE_ALLOWED_ORIGINS=*
      - DEMO=1
    ports:
      - "3001:80"
    networks:
      - mslearning
  messenger:
    build:
      context: ./ms-learning-backend
      dockerfile: Dockerfile
    container_name: mslearning_messenger
    depends_on:
      - php
      - db
    networks:
      - mslearning
    command: [ "php", "bin/console", "messenger:consume", "async", "-vv" ]

  whisper:
    build:
      context: ./whisper-service
    container_name: mslearning_whisper
    ports:
      - "5000:5000"
    networks:
      - mslearning

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: mslearning_elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - mslearning
    deploy:
      resources:
        limits:
          memory: 2G

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: mslearning-logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./docker/logstash/config:/usr/share/logstash/config/:ro
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline/:ro
    environment:
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    networks:
      - mslearning
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: mslearning_kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://mslearning_elasticsearch:9200"]'
    networks:
      - mslearning
    depends_on:
      - elasticsearch
      - logstash

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.0
    container_name: mslearning-filebeat
    user: root
    volumes:
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./ms-learning-backend/var/log:/var/www/html/var/log:ro
    networks:
      - mslearning
    depends_on:
      - logstash
      - php
    command: filebeat -e -strict.perms=false

networks:
  mslearning:
    driver: bridge

volumes:
  db_data:
  elasticsearch_data:
